
Week5spi.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000346  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002f2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000346  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000378  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  000003b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000dae  00000000  00000000  0000042c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008f5  00000000  00000000  000011da  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000526  00000000  00000000  00001acf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000010c  00000000  00000000  00001ff8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004ea  00000000  00000000  00002104  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000034e  00000000  00000000  000025ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000068  00000000  00000000  0000293c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	ef d0       	rcall	.+478    	; 0x278 <main>
  9a:	29 c1       	rjmp	.+594    	; 0x2ee <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <spi_masterInit>:
void displayOff()
{
	spi_slaveSelect(0); // Select display chip
	spi_write(0x0C); // Register 0B: Shutdown register
	spi_write(0x00); // -> 1 = Normal operation
	spi_slaveDeSelect(0); // Deselect display chip
  9e:	8f ef       	ldi	r24, 0xFF	; 255
  a0:	87 bb       	out	0x17, r24	; 23
  a2:	87 b3       	in	r24, 0x17	; 23
  a4:	87 7f       	andi	r24, 0xF7	; 247
  a6:	87 bb       	out	0x17, r24	; 23
  a8:	88 b3       	in	r24, 0x18	; 24
  aa:	81 60       	ori	r24, 0x01	; 1
  ac:	88 bb       	out	0x18, r24	; 24
  ae:	82 e5       	ldi	r24, 0x52	; 82
  b0:	8d b9       	out	0x0d, r24	; 13
  b2:	08 95       	ret

000000b4 <spi_write>:
  b4:	8f b9       	out	0x0f, r24	; 15
  b6:	77 9b       	sbis	0x0e, 7	; 14
  b8:	fe cf       	rjmp	.-4      	; 0xb6 <spi_write+0x2>
  ba:	08 95       	ret

000000bc <spi_slaveSelect>:
  bc:	98 b3       	in	r25, 0x18	; 24
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	30 e0       	ldi	r19, 0x00	; 0
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <spi_slaveSelect+0xc>
  c4:	22 0f       	add	r18, r18
  c6:	33 1f       	adc	r19, r19
  c8:	8a 95       	dec	r24
  ca:	e2 f7       	brpl	.-8      	; 0xc4 <spi_slaveSelect+0x8>
  cc:	20 95       	com	r18
  ce:	29 23       	and	r18, r25
  d0:	28 bb       	out	0x18, r18	; 24
  d2:	08 95       	ret

000000d4 <spi_slaveDeSelect>:
  d4:	98 b3       	in	r25, 0x18	; 24
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	30 e0       	ldi	r19, 0x00	; 0
  da:	02 c0       	rjmp	.+4      	; 0xe0 <spi_slaveDeSelect+0xc>
  dc:	22 0f       	add	r18, r18
  de:	33 1f       	adc	r19, r19
  e0:	8a 95       	dec	r24
  e2:	e2 f7       	brpl	.-8      	; 0xdc <spi_slaveDeSelect+0x8>
  e4:	29 2b       	or	r18, r25
  e6:	28 bb       	out	0x18, r18	; 24
  e8:	08 95       	ret

000000ea <displayDriverInit>:
  ea:	80 e0       	ldi	r24, 0x00	; 0
  ec:	e7 df       	rcall	.-50     	; 0xbc <spi_slaveSelect>
  ee:	89 e0       	ldi	r24, 0x09	; 9
  f0:	e1 df       	rcall	.-62     	; 0xb4 <spi_write>
  f2:	8f ef       	ldi	r24, 0xFF	; 255
  f4:	df df       	rcall	.-66     	; 0xb4 <spi_write>
  f6:	80 e0       	ldi	r24, 0x00	; 0
  f8:	ed df       	rcall	.-38     	; 0xd4 <spi_slaveDeSelect>
  fa:	80 e0       	ldi	r24, 0x00	; 0
  fc:	df df       	rcall	.-66     	; 0xbc <spi_slaveSelect>
  fe:	8a e0       	ldi	r24, 0x0A	; 10
 100:	d9 df       	rcall	.-78     	; 0xb4 <spi_write>
 102:	8f e0       	ldi	r24, 0x0F	; 15
 104:	d7 df       	rcall	.-82     	; 0xb4 <spi_write>
 106:	80 e0       	ldi	r24, 0x00	; 0
 108:	e5 df       	rcall	.-54     	; 0xd4 <spi_slaveDeSelect>
 10a:	80 e0       	ldi	r24, 0x00	; 0
 10c:	d7 df       	rcall	.-82     	; 0xbc <spi_slaveSelect>
 10e:	8b e0       	ldi	r24, 0x0B	; 11
 110:	d1 df       	rcall	.-94     	; 0xb4 <spi_write>
 112:	83 e0       	ldi	r24, 0x03	; 3
 114:	cf df       	rcall	.-98     	; 0xb4 <spi_write>
 116:	80 e0       	ldi	r24, 0x00	; 0
 118:	dd df       	rcall	.-70     	; 0xd4 <spi_slaveDeSelect>
 11a:	80 e0       	ldi	r24, 0x00	; 0
 11c:	cf df       	rcall	.-98     	; 0xbc <spi_slaveSelect>
 11e:	8c e0       	ldi	r24, 0x0C	; 12
 120:	c9 df       	rcall	.-110    	; 0xb4 <spi_write>
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	c7 df       	rcall	.-114    	; 0xb4 <spi_write>
 126:	80 e0       	ldi	r24, 0x00	; 0
 128:	d5 cf       	rjmp	.-86     	; 0xd4 <spi_slaveDeSelect>
 12a:	08 95       	ret

0000012c <spi_writeWord>:
 12c:	cf 93       	push	r28
 12e:	df 93       	push	r29
 130:	d8 2f       	mov	r29, r24
 132:	c6 2f       	mov	r28, r22
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	c2 df       	rcall	.-124    	; 0xbc <spi_slaveSelect>
 138:	8d 2f       	mov	r24, r29
 13a:	bc df       	rcall	.-136    	; 0xb4 <spi_write>
 13c:	8c 2f       	mov	r24, r28
 13e:	ba df       	rcall	.-140    	; 0xb4 <spi_write>
 140:	80 e0       	ldi	r24, 0x00	; 0
 142:	c8 df       	rcall	.-112    	; 0xd4 <spi_slaveDeSelect>
 144:	df 91       	pop	r29
 146:	cf 91       	pop	r28
 148:	08 95       	ret

0000014a <writeLedDisplay>:
 14a:	ef 92       	push	r14
 14c:	ff 92       	push	r15
 14e:	0f 93       	push	r16
 150:	1f 93       	push	r17
 152:	cf 93       	push	r28
 154:	df 93       	push	r29
 156:	cd b7       	in	r28, 0x3d	; 61
 158:	de b7       	in	r29, 0x3e	; 62
 15a:	28 97       	sbiw	r28, 0x08	; 8
 15c:	0f b6       	in	r0, 0x3f	; 63
 15e:	f8 94       	cli
 160:	de bf       	out	0x3e, r29	; 62
 162:	0f be       	out	0x3f, r0	; 63
 164:	cd bf       	out	0x3d, r28	; 61
 166:	9c 01       	movw	r18, r24
 168:	99 23       	and	r25, r25
 16a:	0c f0       	brlt	.+2      	; 0x16e <writeLedDisplay+0x24>
 16c:	39 c0       	rjmp	.+114    	; 0x1e0 <writeLedDisplay+0x96>
 16e:	31 95       	neg	r19
 170:	21 95       	neg	r18
 172:	31 09       	sbc	r19, r1
 174:	ea e0       	ldi	r30, 0x0A	; 10
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	c9 01       	movw	r24, r18
 17a:	bf 01       	movw	r22, r30
 17c:	91 d0       	rcall	.+290    	; 0x2a0 <__divmodhi4>
 17e:	8c 01       	movw	r16, r24
 180:	c9 01       	movw	r24, r18
 182:	80 1b       	sub	r24, r16
 184:	91 0b       	sbc	r25, r17
 186:	bf 01       	movw	r22, r30
 188:	8b d0       	rcall	.+278    	; 0x2a0 <__divmodhi4>
 18a:	cb 01       	movw	r24, r22
 18c:	bf 01       	movw	r22, r30
 18e:	88 d0       	rcall	.+272    	; 0x2a0 <__divmodhi4>
 190:	7c 01       	movw	r14, r24
 192:	28 1b       	sub	r18, r24
 194:	39 0b       	sbc	r19, r25
 196:	c9 01       	movw	r24, r18
 198:	80 1b       	sub	r24, r16
 19a:	91 0b       	sbc	r25, r17
 19c:	64 e6       	ldi	r22, 0x64	; 100
 19e:	70 e0       	ldi	r23, 0x00	; 0
 1a0:	7f d0       	rcall	.+254    	; 0x2a0 <__divmodhi4>
 1a2:	cb 01       	movw	r24, r22
 1a4:	bf 01       	movw	r22, r30
 1a6:	7c d0       	rcall	.+248    	; 0x2a0 <__divmodhi4>
 1a8:	1a 83       	std	Y+2, r17	; 0x02
 1aa:	09 83       	std	Y+1, r16	; 0x01
 1ac:	fc 82       	std	Y+4, r15	; 0x04
 1ae:	eb 82       	std	Y+3, r14	; 0x03
 1b0:	9e 83       	std	Y+6, r25	; 0x06
 1b2:	8d 83       	std	Y+5, r24	; 0x05
 1b4:	f8 87       	std	Y+8, r31	; 0x08
 1b6:	ef 83       	std	Y+7, r30	; 0x07
 1b8:	11 e0       	ldi	r17, 0x01	; 1
 1ba:	0f c0       	rjmp	.+30     	; 0x1da <writeLedDisplay+0x90>
 1bc:	e1 2f       	mov	r30, r17
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	31 97       	sbiw	r30, 0x01	; 1
 1c2:	ee 0f       	add	r30, r30
 1c4:	ff 1f       	adc	r31, r31
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	8c 0f       	add	r24, r28
 1cc:	9d 1f       	adc	r25, r29
 1ce:	e8 0f       	add	r30, r24
 1d0:	f9 1f       	adc	r31, r25
 1d2:	60 81       	ld	r22, Z
 1d4:	81 2f       	mov	r24, r17
 1d6:	aa df       	rcall	.-172    	; 0x12c <spi_writeWord>
 1d8:	1f 5f       	subi	r17, 0xFF	; 255
 1da:	15 30       	cpi	r17, 0x05	; 5
 1dc:	78 f3       	brcs	.-34     	; 0x1bc <writeLedDisplay+0x72>
 1de:	3f c0       	rjmp	.+126    	; 0x25e <writeLedDisplay+0x114>
 1e0:	0a e0       	ldi	r16, 0x0A	; 10
 1e2:	10 e0       	ldi	r17, 0x00	; 0
 1e4:	b8 01       	movw	r22, r16
 1e6:	5c d0       	rcall	.+184    	; 0x2a0 <__divmodhi4>
 1e8:	fc 01       	movw	r30, r24
 1ea:	c9 01       	movw	r24, r18
 1ec:	8e 1b       	sub	r24, r30
 1ee:	9f 0b       	sbc	r25, r31
 1f0:	b8 01       	movw	r22, r16
 1f2:	56 d0       	rcall	.+172    	; 0x2a0 <__divmodhi4>
 1f4:	cb 01       	movw	r24, r22
 1f6:	b8 01       	movw	r22, r16
 1f8:	53 d0       	rcall	.+166    	; 0x2a0 <__divmodhi4>
 1fa:	7c 01       	movw	r14, r24
 1fc:	c9 01       	movw	r24, r18
 1fe:	8e 19       	sub	r24, r14
 200:	9f 09       	sbc	r25, r15
 202:	8e 1b       	sub	r24, r30
 204:	9f 0b       	sbc	r25, r31
 206:	64 e6       	ldi	r22, 0x64	; 100
 208:	70 e0       	ldi	r23, 0x00	; 0
 20a:	4a d0       	rcall	.+148    	; 0x2a0 <__divmodhi4>
 20c:	cb 01       	movw	r24, r22
 20e:	b8 01       	movw	r22, r16
 210:	47 d0       	rcall	.+142    	; 0x2a0 <__divmodhi4>
 212:	8c 01       	movw	r16, r24
 214:	c9 01       	movw	r24, r18
 216:	80 1b       	sub	r24, r16
 218:	91 0b       	sbc	r25, r17
 21a:	8e 19       	sub	r24, r14
 21c:	9f 09       	sbc	r25, r15
 21e:	8e 1b       	sub	r24, r30
 220:	9f 0b       	sbc	r25, r31
 222:	68 ee       	ldi	r22, 0xE8	; 232
 224:	73 e0       	ldi	r23, 0x03	; 3
 226:	3c d0       	rcall	.+120    	; 0x2a0 <__divmodhi4>
 228:	fa 83       	std	Y+2, r31	; 0x02
 22a:	e9 83       	std	Y+1, r30	; 0x01
 22c:	fc 82       	std	Y+4, r15	; 0x04
 22e:	eb 82       	std	Y+3, r14	; 0x03
 230:	1e 83       	std	Y+6, r17	; 0x06
 232:	0d 83       	std	Y+5, r16	; 0x05
 234:	78 87       	std	Y+8, r23	; 0x08
 236:	6f 83       	std	Y+7, r22	; 0x07
 238:	11 e0       	ldi	r17, 0x01	; 1
 23a:	0f c0       	rjmp	.+30     	; 0x25a <writeLedDisplay+0x110>
 23c:	e1 2f       	mov	r30, r17
 23e:	f0 e0       	ldi	r31, 0x00	; 0
 240:	31 97       	sbiw	r30, 0x01	; 1
 242:	ee 0f       	add	r30, r30
 244:	ff 1f       	adc	r31, r31
 246:	81 e0       	ldi	r24, 0x01	; 1
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	8c 0f       	add	r24, r28
 24c:	9d 1f       	adc	r25, r29
 24e:	e8 0f       	add	r30, r24
 250:	f9 1f       	adc	r31, r25
 252:	60 81       	ld	r22, Z
 254:	81 2f       	mov	r24, r17
 256:	6a df       	rcall	.-300    	; 0x12c <spi_writeWord>
 258:	1f 5f       	subi	r17, 0xFF	; 255
 25a:	15 30       	cpi	r17, 0x05	; 5
 25c:	78 f3       	brcs	.-34     	; 0x23c <writeLedDisplay+0xf2>
 25e:	28 96       	adiw	r28, 0x08	; 8
 260:	0f b6       	in	r0, 0x3f	; 63
 262:	f8 94       	cli
 264:	de bf       	out	0x3e, r29	; 62
 266:	0f be       	out	0x3f, r0	; 63
 268:	cd bf       	out	0x3d, r28	; 61
 26a:	df 91       	pop	r29
 26c:	cf 91       	pop	r28
 26e:	1f 91       	pop	r17
 270:	0f 91       	pop	r16
 272:	ff 90       	pop	r15
 274:	ef 90       	pop	r14
 276:	08 95       	ret

00000278 <main>:
}
int main()
{
 278:	cf 93       	push	r28
	DDRB=0x01; // Set PB0 pin as output for display select
 27a:	81 e0       	ldi	r24, 0x01	; 1
 27c:	87 bb       	out	0x17, r24	; 23
	spi_masterInit(); // Initialize spi module
 27e:	0f df       	rcall	.-482    	; 0x9e <spi_masterInit>
	displayDriverInit(); // Initialize display chip
 280:	34 df       	rcall	.-408    	; 0xea <displayDriverInit>
 282:	c1 e0       	ldi	r28, 0x01	; 1
	// clear display (all zero's)
	for (char i =1; i<=4; i++)
 284:	04 c0       	rjmp	.+8      	; 0x28e <main+0x16>
 286:	60 e0       	ldi	r22, 0x00	; 0
	{
		spi_writeWord(i,0);
 288:	8c 2f       	mov	r24, r28
 28a:	50 df       	rcall	.-352    	; 0x12c <spi_writeWord>
 28c:	cf 5f       	subi	r28, 0xFF	; 255
{
	DDRB=0x01; // Set PB0 pin as output for display select
	spi_masterInit(); // Initialize spi module
	displayDriverInit(); // Initialize display chip
	// clear display (all zero's)
	for (char i =1; i<=4; i++)
 28e:	c5 30       	cpi	r28, 0x05	; 5
 290:	d0 f3       	brcs	.-12     	; 0x286 <main+0xe>
		spi_writeWord(i,0);
	}
	//wait(1000);
	// write 4-digit data
	
	writeLedDisplay(-447);
 292:	81 e4       	ldi	r24, 0x41	; 65
 294:	9e ef       	ldi	r25, 0xFE	; 254
 296:	59 df       	rcall	.-334    	; 0x14a <writeLedDisplay>
 298:	81 e0       	ldi	r24, 0x01	; 1

	//wait(1000);
	return (1);
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	cf 91       	pop	r28
 29e:	08 95       	ret

000002a0 <__divmodhi4>:
 2a0:	97 fb       	bst	r25, 7
 2a2:	07 2e       	mov	r0, r23
 2a4:	16 f4       	brtc	.+4      	; 0x2aa <__divmodhi4+0xa>
 2a6:	00 94       	com	r0
 2a8:	06 d0       	rcall	.+12     	; 0x2b6 <__divmodhi4_neg1>
 2aa:	77 fd       	sbrc	r23, 7
 2ac:	08 d0       	rcall	.+16     	; 0x2be <__divmodhi4_neg2>
 2ae:	0b d0       	rcall	.+22     	; 0x2c6 <__udivmodhi4>
 2b0:	07 fc       	sbrc	r0, 7
 2b2:	05 d0       	rcall	.+10     	; 0x2be <__divmodhi4_neg2>
 2b4:	3e f4       	brtc	.+14     	; 0x2c4 <__divmodhi4_exit>

000002b6 <__divmodhi4_neg1>:
 2b6:	90 95       	com	r25
 2b8:	81 95       	neg	r24
 2ba:	9f 4f       	sbci	r25, 0xFF	; 255
 2bc:	08 95       	ret

000002be <__divmodhi4_neg2>:
 2be:	70 95       	com	r23
 2c0:	61 95       	neg	r22
 2c2:	7f 4f       	sbci	r23, 0xFF	; 255

000002c4 <__divmodhi4_exit>:
 2c4:	08 95       	ret

000002c6 <__udivmodhi4>:
 2c6:	aa 1b       	sub	r26, r26
 2c8:	bb 1b       	sub	r27, r27
 2ca:	51 e1       	ldi	r21, 0x11	; 17
 2cc:	07 c0       	rjmp	.+14     	; 0x2dc <__udivmodhi4_ep>

000002ce <__udivmodhi4_loop>:
 2ce:	aa 1f       	adc	r26, r26
 2d0:	bb 1f       	adc	r27, r27
 2d2:	a6 17       	cp	r26, r22
 2d4:	b7 07       	cpc	r27, r23
 2d6:	10 f0       	brcs	.+4      	; 0x2dc <__udivmodhi4_ep>
 2d8:	a6 1b       	sub	r26, r22
 2da:	b7 0b       	sbc	r27, r23

000002dc <__udivmodhi4_ep>:
 2dc:	88 1f       	adc	r24, r24
 2de:	99 1f       	adc	r25, r25
 2e0:	5a 95       	dec	r21
 2e2:	a9 f7       	brne	.-22     	; 0x2ce <__udivmodhi4_loop>
 2e4:	80 95       	com	r24
 2e6:	90 95       	com	r25
 2e8:	bc 01       	movw	r22, r24
 2ea:	cd 01       	movw	r24, r26
 2ec:	08 95       	ret

000002ee <_exit>:
 2ee:	f8 94       	cli

000002f0 <__stop_program>:
 2f0:	ff cf       	rjmp	.-2      	; 0x2f0 <__stop_program>
